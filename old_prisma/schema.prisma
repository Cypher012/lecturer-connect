// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init


generator client {
  provider = "prisma-client"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


// Dept to courses (many to many)
// Dept to lecturer (one to many)
// lecturer to courses (many to many)
// 

model Course {
  id           String       @id @default(uuid())
  course_code  String       @unique
  course_title String 
  lecturers     Lecturer[]
  departments  Department[]
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @updatedAt
}

model Department {
  id        String     @id @default(uuid())
  name      String     @unique
  description String
  courses   Course[]
  lecturers  Lecturer[]
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}

model Lecturer {
  id               String          @id @default(uuid())
  full_name        String          @unique
  title            String
  department       Department     @relation(fields: [departmentId], references: [id])
  departmentId     String
  email            String          @unique
  phone            String?
  profile_picture  String?
  orcid            String?
  scopus_id        String?
  courses          Course[]
  researchAreas    String[]
  qualifications   String[]
  linkedin_url     String?
  personal_website String?
  publications     Publication[]   
  createdAt        DateTime        @default(now())
  updatedAt        DateTime        @updatedAt
}

model Publication {
  id          String       @id @default(uuid())
  title       String
  type        String
  year        Int
  doi         String?
  link        String?
  lecturers   Lecturer[]   
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt

  @@unique([title, year])
}